version: '3.8'

services:
  # API Gateway
  gateway:
    build: ./services/gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - SERVICES_AUTH=http://auth:3001
      - SERVICES_USER=http://user:3002
      - SERVICES_PARKING=http://parking:3003
      - SERVICES_NAVIGATION=http://navigation:3004
      - SERVICES_NOTIFICATION=http://notification:3005
      - SERVICES_ANALYTICS=http://analytics:3006
      - SERVICES_PAYMENT=http://payment:3007
    depends_on:
      - redis
      - auth
      - user
      - parking
      - navigation
      - notification
      - analytics
      - payment
    networks:
      - okapifind

  # Authentication Service
  auth:
    build: ./services/auth
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - FIREBASE_CONFIG=${FIREBASE_CONFIG}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - okapifind

  # User Service
  user:
    build: ./services/user
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - S3_BUCKET=${S3_BUCKET}
    depends_on:
      - postgres
      - redis
    networks:
      - okapifind

  # Parking Service
  parking:
    build: ./services/parking
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - ML_SERVICE_URL=http://ml:3008
    depends_on:
      - postgres
      - redis
      - ml
    networks:
      - okapifind

  # Navigation Service
  navigation:
    build: ./services/navigation
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - REDIS_URL=redis://redis:6379
      - OSM_API_URL=${OSM_API_URL}
    depends_on:
      - redis
    networks:
      - okapifind

  # Notification Service
  notification:
    build: ./services/notification
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production
      - FCM_SERVER_KEY=${FCM_SERVER_KEY}
      - APNS_KEY=${APNS_KEY}
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - redis
      - kafka
    networks:
      - okapifind

  # Analytics Service
  analytics:
    build: ./services/analytics
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=production
      - CLICKHOUSE_URL=http://clickhouse:8123
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - clickhouse
      - redis
      - kafka
    networks:
      - okapifind

  # Payment Service
  payment:
    build: ./services/payment
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=production
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - REVENUECAT_SECRET=${REVENUECAT_SECRET}
      - DATABASE_URL=${DATABASE_URL}
      - BLOCKCHAIN_RPC=${BLOCKCHAIN_RPC}
    depends_on:
      - postgres
    networks:
      - okapifind

  # ML Service (Python)
  ml:
    build: ./services/ml
    ports:
      - "3008:3008"
    environment:
      - PYTHON_ENV=production
      - MODEL_PATH=/models
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./models:/models
    depends_on:
      - redis
    networks:
      - okapifind

  # WebSocket Service
  websocket:
    build: ./services/websocket
    ports:
      - "3009:3009"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - redis
    networks:
      - okapifind

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=okapifind
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=okapifind
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - okapifind

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - okapifind

  # Kafka Message Queue
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    networks:
      - okapifind

  # Zookeeper (for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - okapifind

  # ClickHouse (Analytics Database)
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - okapifind

  # Elasticsearch (Search & Logs)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      - okapifind

  # Kibana (Log Visualization)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - okapifind

  # Prometheus (Metrics)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - okapifind

  # Grafana (Monitoring Dashboard)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3010:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - okapifind

  # Jaeger (Distributed Tracing)
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - okapifind

  # NGINX (Load Balancer & Reverse Proxy)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - gateway
    networks:
      - okapifind

volumes:
  postgres_data:
  redis_data:
  clickhouse_data:
  elastic_data:
  prometheus_data:
  grafana_data:

networks:
  okapifind:
    driver: bridge